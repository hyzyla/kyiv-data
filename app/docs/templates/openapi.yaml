openapi: "3.0.2"
info:
  title: "Документація по API"
  version: "0.0.1"

servers:
- url: "{{ server }}"

paths:
  # Пошук
  /api/search:
    get:
      summary: Пошук звернень
      tags:
        - Пошук
      parameters:
        - in: query
          name: number
          description: Номер зверення
          schema: { type: string }
        - in: query
          name: text
          description: Текст звернення
          schema: { type: string }
        - in: query
          name: id
          description: ID звернення
          schema: { type: string }
        - in: query
          name: external_id
          description: ID з зовнішнього сервісу вказаного в source
          schema: { type: integer }
        - in: query
          name: address
          description: Адреса звернення
          schema: { type: string }
        - in: query
          name: approx_done_date
          description: Планується виконати до
          schema: { type: string, format: date }
        - in: query
          name: created_at
          description: Дата і час коли було створено звернення
          schema: { type: string, format: date-time }
        - in: query
          name: status
          description: Статус звернення
          schema:
            $ref: '#/components/schemas/TicketStatus'
        - in: query
          name: subject_id
          description: Тема звернення
          schema: { type: integer }
        - in: query
          name: title
          description: Заголовок звернення
          schema: { type: string }
        - in: query
          name: source
          description: Джерело звернення
          schema:
            $ref: '#/components/schemas/TicketSourceEnum'
        - in: query
          name: district_id
          description: ID району міста
          schema: { type: integer }
        - in: query
          name: work_taken_by
          description: Ким взято в роботу
          schema: { type: string }
        - in: query
          name: user_id
          description: ID користувача
          schema: { type: string }
        - in: query
          name: detection_date
          description: Дата виявилення
          schema: { type: date-time }
      responses:
        '200':
          description: Список звернень
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketsPage'

  # статистика
  /api/titles:
    get:
      deprecated: true
      summary: Отримати заголовки зверненнь і кількість звернень з таким заголовком.
      tags:
        - Статистика
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TitlesStat'

  /api/stats/titles/tickets:
    get:
      summary: Отримати статисику по кількості звернень для кожного заголовку
      tags:
        - Статистика
      parameters:
        - in: query
          name: fake
          required: false
          description: Можна використовувати всі ті ж фільтри, що й для пошуку зверень
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TitlesStat'

  /api/subjects:
    get:
      deprecated: true
      summary: Отримати теми звернень і кількість звернень з такою ж темою.
      tags:
        - Статистика
      responses:
        '200':
          description: Статистика звернь по темах
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubjectsStat'

  /api/stats/subjects/tickets:
    get:
      summary: Отримтаи статистику по кількості звернень для кожної теми
      tags:
        - Статистика
      parameters:
        - in: query
          name: fake
          required: false
          description: Можна використовувати всі ті ж фільтри, що й для пошуку зверень
      responses:
        '200':
          description: Статистика звернь по темах
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubjectsStat'

  /api/disticts:
    get:
      deprecated: true
      summary: Отримати райони Кєива і кількість звернень в цьому районі
      tags:
        - Статистика
      responses:
        '200':
          description: Статистика звернь по районах
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DistrictStat'

  /api/stats/districts/tickets:
    get:
      summary: Отримати статистику по кількості звернень для кожного району
      tags:
        - Статистика
      parameters:
        - in: query
          name: fake
          required: false
          description: Можна використовувати всі ті ж фільтри, що й для пошуку зверень
      responses:
        '200':
          description: Статистика звернь по районах
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DistrictStat'

  # звернення
  /api/tickets:
    post:
      summary: Створити звернення
      security:
        - UserAuth: [ ]
          ServiceAuth: [ ]
      tags:
        - Звернення
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTicket'
      responses:
        '200':
          description: Звернення створено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'

  /api/tickets/{ticket_id}:
    parameters:
      - name: ticket_id
        in: path
        description: ID звернення
        required: true
        schema:
          type: integer
          format: int64
    get:
      summary: Отримати звренненя
      tags:
        - Звернення
      responses:
        '200':
          description: Звернення було знайдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
    delete:
      summary: Видалити звернення
      tags:
        - Звернення
      security:
        - UserAuth: [ ]
          ServiceAuth: [ ]
      responses:
        '200':
          description: Звернення було видалено

  /api/tickets/titles:
    get:
      summary: Отримати заголовки звернення
      tags:
        - Звернення
      responses:
        '200':
          description: Список заголовків
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TicketTitle'

  /api/tickets/subjects:
    get:
      summary: Отримати список тем звернень
      tags:
        - Звернення
      responses:
        '200':
          description: Список тем звернень
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TicketSubject'

  /api/tickets/districts:
    get:
      summary: Отримати список районів
      tags:
        - Звернення
      responses:
        '200':
          description: Список ройонів
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TicketDistrict'

  /api/tickets/sources:
    get:
      summary: Отримати список джерел даних звернень
      tags:
        - Звернення
      responses:
        '200':
          description: Список джерел
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TicketSource'

  # фото
  /api/tickets/photos:
    post:
      summary: Завантажити зображення для зверення
      security:
        - UserAuth: [ ]
          ServiceAuth: [ ]
      tags:
        - Зображення
      requestBody:
        description: Зображення в бінарному форматі
        required: true
        content:
          image/*:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: ID завантаженого зображення
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketPhoto'

  /api/tickets/photos/{photo_id}:
    get:
      summary: Отримати зображення
      security:
        - UserAuth: [ ]
          ServiceAuth: [ ]
      tags:
        - Зображення
      parameters:
        - name: photo_id
          in: path
          description: ID зображення
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Вміст зображення
          content:
            image/*:
              schema:
                type: string
                format: binary
  /api/tickets/tags:
    get:
      summary: Отримати список тегів
      tags:
        - Теги
      responses:
        '200':
          description: Список тегів
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TicketTag'

tags:
  - name: Пошук
  - name: Статистика
  - name: Звернення
  - name: Зображення
  - name: Теги


components:
  schemas:
    # enums
    TicketStatus:
      type: string
      enum:
        - На модерації
        - В роботі
        - Звернення виконано
    TicketSourceEnum:
      type: string
      enum:
        - cc1551
        - api
    TicketPriority:
      type: string
      enum:
        - discomfort
        - waiting
        - losing_money
        - damage
        - death

    # Response schemas
    Ticket:
      properties:
        id: { type: integer }
        external_id: { type: integer, required: false }
        user_id: { type: string }
        number: { type: string, required: false }
        title: { type: string, required: false }
        text: { type: string }
        address: { type: string, required: false }
        link: { type: string, required: false }
        work_taken_by: { type: string, required: false }
        aprox_done_date: { type: string, format: date, required: false }
        datection_date: { type: string, format: date-time, required: false }
        created_at: { type: string, format: date-time }
        subject_id: { type: integer, required: false }
        district_id: { type: integer, required: false }
        city_id: { type: integer, required: false }
        status: { $ref: '#/components/schemas/TicketStatus' }
        source: { $ref: '#/components/schemas/TicketSourceEnum'  }
        priority: { $ref: '#/components/schemas/TicketPriority', required: false }
        location: { $ref: '#/components/schemas/TicketLocation', required: false }
        tags:
          type: array
          items:
            $ref: '#/components/schemas/TicketTag'
        photos:
          type: array
          items:
            $ref: '#/components/schemas/TicketPhoto'

    TicketsPage:
      properties:
        num_pages: { type: integer }
        page: { type: integer }
        per_page: { type: integer }
        total_items: { type: integer }
        items:
          type: array
          items:
            $ref: '#/components/schemas/Ticket'

    TicketLocation:
      properties:
        lat: { type: number }
        lng: { type: number }
    TicketTag:
      properties:
        name: { type: string }
    TicketPhoto:
      properties:
        id: { type: string, format: uuid }
    CreateTicket:
      properties:
        title: { type: string, required: false }
        subject_id: { type: integer, required: false }
        text: { type: string }
        tags:
          type: array
          items:
            $ref: '#/components/schemas/TicketTag'
        address: { type: string, required: false }
        location: { $ref: '#/components/schemas/TicketLocation', required: false }
        priority: { $ref: '#/components/schemas/TicketPriority', required: false }
        link: { type: string, required: false }
        photos:
          type: array
          required: false
          items:
            $ref: '#/components/schemas/TicketPhoto'
        district_id: { type: integer, required: false }
        city_id: { type: integer, required: false }
      example:
        title: Не працює телепорт
        city_id: 100
        address: вул. Прорізна, буд. 13
        subject_id: 200
        text: >-
          На прорізній, біля Віртуаторія, після піщаної бурі перестав працювати Телепорт
          ДВЗ-12. Починіть, пліз! Дуже хочу потрапити до батьків на День інтернету
        priority: damage
        link: https://www.youtube.com/watch?v=oHg5SJYRHA0
        detection_date: 2014-12-22T03:12:58+00:00
        tags:
          - name: Телепорт
          - name: Транспорт
        location:
          lat: 19.1
          lng: 21.02
        photos:
          - id: 358eaec0-cb1d-4340-91da-3b0612cab6b5


    TitlesStat:
      properties:
        title: { type: string }
        tickets_count: { type: integer }

    DistrictStat:
      properties:
        id: { type: integer }
        name: { type: string }
        tickets_count: { type: integer }

    SubjectsStat:
      properties:
        id: { type: integer }
        name: { type: string }
        tickets_count: { type: integer }

    TicketTitle:
      properties:
        title: { type: string }

    TicketDistrict:
      properties:
        id: { type: integer }
        name: { type: string }

    TicketSubject:
      properties:
        id: { type: integer }
        name: { type: string }

    TicketSource:
      properties:
        value: { type: string }
        name: { type: string }

  securitySchemes:
    UserAuth:  # Токен користувача
      type: apiKey
      in: header
      name: Custom-Token
    ServiceAuth:  # Сервісний токен для спілкування між сервісами
      type: apiKey
      in: header
      name: Authorization