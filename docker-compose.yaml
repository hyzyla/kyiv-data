version: '3.7'


x-python: &app-python
  tty: true
  build:
    context: .
    dockerfile: docker/dev.dockerfile
  image: kyiv-data
  volumes: [ '.:/app' ]
  environment:
    - FLASK_APP=app.main:app
  env_file:
    - config/dev/dev.env


x-tools: &app-tools
  tty: true
  build:
    context: .
    dockerfile: docker/tools.dockerfile
  environment:
    - FLASK_APP=app.main:app
  image: kyiv-data-tools
  volumes: [ '.:/app' ]


services:
  app:
    <<: *app-python
    entrypoint: flask
    command: run --host=0.0.0.0
    ports: ['5000:5000']
    depends_on: ['db']

  db:
    image: postgres:13
    ports: ['5432:5432']
    environment:
      POSTGRES_PASSWORD: admin
      POSTGRES_USER: admin
      POSTGRES_DB: kyiv-data-database

  db-test:
    image: postgres:13
    container_name: kyiv-data-db-test
    environment:
      POSTGRES_PASSWORD: admin
      POSTGRES_USER: admin
      POSTGRES_DB: kyiv-data-test-database

  flake8:
    <<: *app-tools
    entrypoint: flake8 app

  mypy:
    <<: *app-tools
    entrypoint: mypy app

  black:
    <<: *app-tools
    entrypoint: black --line-length 120 -t py38 -S
    command: app

  alembic:
    <<: *app-tools
    entrypoint: alembic
    depends_on: ['db']

  pytest:
    <<: *app-tools
    env_file:
      - config/test/test.env
    depends_on: ['db-test']
    entrypoint:
      - /bin/sh
      - -c
      - |
        chmod +x ./scripts/wait-for-it.sh &&
        ./scripts/wait-for-it.sh db-test:5432 -- flask db upgrade &&
        pytest "$$@"
      - /bin/sh

  pip-compile:
    <<: *app-tools
    entrypoint: pip-compile
    command: requirements/base.in -o requirements/base.txt